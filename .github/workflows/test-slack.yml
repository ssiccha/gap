name: slack test

# Trigger the workflow on push or pull request
on:
  - push
  - pull_request


jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - run: exit 1

  job2:
    runs-on: ubuntu-latest
    steps:
      - run: exit 0

  slack-test:
    name: slack test
    needs:
      - job1
      - job2
    if: ${{ always() && github.event_name == 'push'  && github.repository == 'ssiccha/gap'}}
    # Don't run this twice on PRs for branches pushed to the same repository
    #if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    runs-on: ubuntu-latest

    steps:
      - name: Get branch name
        id: get-branch
        run: echo ::set-output name=branch::${GITHUB_REF#refs/*/}
      - name: Get workflow status
        id: get-status
        shell: bash
        run: |
          status="success"
          if [[ ${{ needs.job1.result }} = "failure" || ${{ needs.job2.result }} = "failure" ]]; then
            status="failure"
          fi
          echo ::set-output name=status::$status
      - name: Determine whether CI status changed
        uses: gap-actions/should-i-notify-action@v1
        id: should_notify
        with:
          branch: ${{ steps.vars.outputs.branch }}
          needs_context: ${{ toJson(needs) }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          notify_on_changed_status: true
      - name: Send slack notification
        uses: act10ns/slack@e4e71685b9b239384b0f676a63c32367f59c2522
        if: steps.should_notify.outputs.should_send_message == 'yes'
        with:
          status: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


